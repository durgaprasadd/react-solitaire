{"version":3,"sources":["cardsData/cards.js","models/card.js","models/pile.js","models/game.js","App.js","index.js"],"names":["Cards","suit","value","color","unicode","Card","_ref","Object","classCallCheck","this","isBlockedCard","actualUnicode","actualColor","Pile","cards","card","push","_this","forEach","addCard","length","id","getCard","getLastCard","pop","noOfCards","_this2","result","Array","fill","map","x","drawCard","reverse","blockCard","revealCard","getLastCardValue","getLastCardColor","getLastCardSuit","Game","deck","reservedPiles","showCardPile","stackPiles","pile","isEmpty","reloadDeck","des","split","includes","addCardToReservedPileFromWaste","addCardToFoundationFromTableau","addCardToStackPileFromWaste","addCardToStackPileFromFoundation","addCardToTableauFromTableau","srcPile","isAddable","isAddableToStackPile","isAlternateColor","isAddableToReservedPile","isSameSuit","getCardValue","getCardColor","addCards","drawCards","isDraggable","src","some","defaultCard","emptyCard","App","props","possibleConstructorReturn","getPrototypeOf","call","state","game","initializeGame","lodash","shuffle","range","index","addReservedPile","i","blockLastCard","revealLastCard","addStackPile","addShuffledPile","initializePile","initializeReservedPiles","initializeStackPiles","setShowCardPile","event","preventDefault","dataTransfer","setData","target","destination","getData","setState","addCardToReservedPile","addCardToStackPile","changeCard","moveToPossiblePile","getTopMostCard","react_default","a","createElement","onDoubleClick","placeCard","bind","className","style","getColor","draggable","onDragStart","drag","getUnicode","onDrop","dropInReservedPile","onDragOver","allowDrop","_this3","totalCards","dblClickHandler","isBlocked","_this4","dropInStackPile","showAllStackCards","onClick","showTopMostCard","showAllReservedPiles","showAllStackPiles","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.58fd5eec.chunk.js","sourcesContent":["const Cards =\n  [\n    {\n      \"suit\": \"spade\",\n      \"value\": 1,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A1}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 2,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A2}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 3,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A3}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 4,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A4}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 5,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A5}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 6,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A6}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 7,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A7}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 8,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A8}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 9,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A9}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 10,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AA}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 11,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AB}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 12,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AD}\"\n    },\n    {\n      \"suit\": \"spade\",\n      \"value\": 13,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AE}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 1,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D1}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 2,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D2}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 3,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D3}\",\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 4,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D4}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 5,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D5}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 6,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D6}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 7,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D7}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 8,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D8}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 9,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D9}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 10,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DA}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 11,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DB}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 12,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DD}\"\n    },\n    {\n      \"suit\": \"club\",\n      \"value\": 13,\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DE}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 1,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C1}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 2,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C2}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 3,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C3}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 4,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C4}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 5,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C5}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 6,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C6}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 7,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C7}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 8,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C8}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 9,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C9}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 10,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CA}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 11,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CB}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 12,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CD}\"\n    },\n    {\n      \"suit\": \"diamond\",\n      \"value\": 13,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CE}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 1,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B1}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 2,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B2}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 3,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B3}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 4,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B4}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 5,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B5}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 6,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B6}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 7,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B7}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 8,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B8}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 9,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B9}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 10,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BA}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 11,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BB}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 12,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BD}\"\n    },\n    {\n      \"suit\": \"heart\",\n      \"value\": 13,\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BE}\"\n    }\n  ]\n\nconst EmptyCard = { \"color\": \"black\", \"unicode\": \"\\u{1F0DF}\" };\nconst Default = { \"color\": \"black\", \"unicode\": \"\\u{1F0A0}\" };\n\nexport { Cards, EmptyCard, Default };","class Card {\n  constructor({ suit, color, value, unicode }) {\n    this.suit = suit;\n    this.color = color;\n    this.value = value;\n    this.unicode = unicode;\n    this.isBlockedCard = false;\n    this.actualUnicode = unicode;\n    this.actualColor = color;\n  }\n  getUnicode() {\n    return this.unicode;\n  }\n  blockCard() {\n    this.isBlockedCard = true;\n    this.unicode = \"\\u{1F0A0}\";\n    this.color = \"black\";\n  }\n  revealCard() {\n    this.isBlockedCard = false;\n    this.unicode = this.actualUnicode;\n    this.color = this.actualColor;\n  }\n  isBlocked() {\n    return this.isBlockedCard;\n  }\n}\n\nexport default Card;","class Pile {\n  constructor() {\n    this.cards = [];\n  }\n  addCard(card) {\n    this.cards.push(card);\n  }\n  addCards(cards) {\n    cards.forEach(card => this.addCard(card));\n  }\n  getLastCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  getCard(id) {\n    return this.cards[this.cards.length - id];\n  }\n\n  getCardValue(id) {\n    if (this.getCard(id)) {\n      return this.getCard(id).value;\n    }\n    return 0;\n  }\n\n  getCardColor(id) {\n    return this.getCard(id).color;\n  }\n\n  getLastCardValue() {\n    if (this.getLastCard()) {\n      return this.getLastCard().value;\n    }\n    return 0;\n  }\n  getLastCardColor() {\n    return this.getLastCard().color;\n  }\n  getLastCardSuit() {\n    return this.getLastCard().suit;\n  }\n  drawCard() {\n    return this.cards.pop();\n  }\n  drawCards(noOfCards) {\n    let result = new Array(noOfCards).fill(1);\n    result = result.map(x => this.drawCard());\n    result.reverse();\n    return result;\n  }\n  isDraggable() {\n    return this.cards.length > 0;\n  }\n  blockLastCard() {\n    this.getLastCard().blockCard();\n  }\n  revealLastCard() {\n    this.getLastCard().revealCard();\n  }\n\n  isAddableToStackPile(value) {\n    if (this.getLastCardValue() === 0)\n      return value === 13;\n    return this.getLastCardValue() === value + 1;\n  }\n\n  isAddableToReservedPile(value) {\n    return this.getLastCardValue() === value - 1;\n  }\n\n  isAlternateColor(color) {\n    if (this.getLastCard())\n      return this.getLastCardColor() !== color;\n    return true;\n  }\n  isSameSuit(suit) {\n    if (this.getLastCard())\n      return this.getLastCardSuit() === suit;\n    return true;\n  }\n  isEmpty() {\n    return this.cards.length === 0;\n  }\n}\n\nexport default Pile;","class Game {\n  constructor() {\n    this.deck = null;\n    this.reservedPiles = [];\n    this.showCardPile = null;\n    this.stackPiles = [];\n  }\n  addShuffledPile(pile) {\n    this.deck = pile;\n  }\n  addReservedPile(pile) {\n    this.reservedPiles.push(pile);\n  }\n  addStackPile(pile) {\n    this.stackPiles.push(pile);\n  }\n  setShowCardPile(pile) {\n    this.showCardPile = pile;\n  }\n\n  reloadDeck() {\n    if (this.showCardPile.isEmpty()) return;\n    this.deck.addCard(this.showCardPile.drawCard());\n    return this.reloadDeck();\n  }\n\n  changeCard() {\n    if (this.deck.isEmpty()) {\n      return this.reloadDeck()\n    }\n    this.showCardPile.addCard(this.drawCard());\n  }\n\n  drawCard() {\n    return this.deck.drawCard();\n  }\n\n  getTopMostCard() {\n    return this.showCardPile.getLastCard();\n\n  }\n  addCardToReservedPile(id, des) {\n    des = des.split(\"_\")\n    if (des.includes(\"showCard\"))\n      return this.addCardToReservedPileFromWaste(id);\n    if (des.includes(\"stackPile\"))\n      return this.addCardToFoundationFromTableau(id, des[1], +des[2]);\n  }\n\n  addCardToStackPile(id, des) {\n    des = des.split(\"_\");\n    if (des.includes(\"showCard\"))\n      return this.addCardToStackPileFromWaste(id);\n    if (des.includes(\"reserved\"))\n      return this.addCardToStackPileFromFoundation(id, des[1]);\n    return this.addCardToTableauFromTableau(id, des[1], +des[2]);\n  }\n\n  addCardToStackPileFromWaste(id) {\n    const pile = this.stackPiles[id];\n    const srcPile = this.showCardPile;\n    const isAddable = pile.isAddableToStackPile(srcPile.getLastCardValue());\n    const isAlternateColor = pile.isAlternateColor(srcPile.getLastCardColor());\n    if (isAddable && isAlternateColor)\n      pile.addCard(srcPile.drawCard())\n    return isAddable && isAlternateColor;\n  }\n\n  addCardToReservedPileFromWaste(id) {\n    const pile = this.reservedPiles[id];\n    const srcPile = this.showCardPile;\n    const isAddable = pile.isAddableToReservedPile(srcPile.getLastCardValue());\n    const isSameSuit = pile.isSameSuit(srcPile.getLastCardSuit());\n    if (isAddable && isSameSuit)\n      pile.addCard(srcPile.drawCard())\n    return isAddable && isSameSuit;\n  }\n\n  addCardToStackPileFromFoundation(id, des) {\n    const pile = this.stackPiles[id];\n    const srcPile = this.reservedPiles[des];\n    const isAddable = pile.isAddableToStackPile(srcPile.getLastCardValue());\n    const isAlternateColor = pile.isAlternateColor(srcPile.getLastCardColor());\n    if (isAddable && isAlternateColor)\n      pile.addCard(srcPile.drawCard());\n    return isAddable && isAlternateColor;\n  }\n\n  addCardToFoundationFromTableau(id, des, noOfCards) {\n    if (noOfCards > 1)\n      return false;\n    const pile = this.reservedPiles[id];\n    const srcPile = this.stackPiles[des];\n    const isAddable = pile.isAddableToReservedPile(srcPile.getLastCardValue());\n    const isSameSuit = pile.isSameSuit(srcPile.getLastCardSuit());\n    if (isAddable && isSameSuit)\n      pile.addCard(srcPile.drawCard())\n    return isAddable && isSameSuit;\n  }\n\n  addCardToTableauFromTableau(id, des, noOfCards) {\n    const pile = this.stackPiles[id];\n    const srcPile = this.stackPiles[des];\n    const isAddable = pile.isAddableToStackPile(srcPile.getCardValue(noOfCards));\n    const isAlternateColor = pile.isAlternateColor(srcPile.getCardColor(noOfCards));\n    if (isAddable && isAlternateColor)\n      pile.addCards(srcPile.drawCards(noOfCards));\n    return isAddable && isAlternateColor;\n  }\n\n  isDraggable(pile) {\n    return pile.isDraggable();\n  }\n\n  moveToPossiblePile(src, noOfCards) {\n    if (src === \"showCard\") {\n      let result = this.reservedPiles.some((x, id) => this.addCardToReservedPileFromWaste(id));\n      result = result || this.stackPiles.some((x, id) => this.addCardToStackPileFromWaste(id));\n      return result;\n    }\n    let result = this.reservedPiles.some((x, id) => this.addCardToFoundationFromTableau(id, src, noOfCards));\n    result = result || this.stackPiles.some((x, id) => this.addCardToTableauFromTableau(id, src, noOfCards));\n    return result;\n  }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport { Cards, EmptyCard, Default } from './cardsData/cards'\nimport Card from './models/card'\nimport './App.css';\nimport Pile from './models/pile';\nimport Game from './models/game';\nimport lodash from 'lodash';\n\nconst defaultCard = new Card(Default);\nconst emptyCard = new Card(EmptyCard);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { game: this.initializeGame() };\n  }\n\n  initializePile() {\n    const pile = new Pile();\n    const shuffledCards = lodash.shuffle(Cards);\n    shuffledCards.forEach(card => pile.addCard(new Card(card)));\n    return pile;\n  }\n\n  initializeReservedPiles(game, range) {\n    for (let index = 0; index < range; index++) {\n      game.addReservedPile(new Pile());\n    }\n  }\n\n  initializeStackPiles(game, range) {\n    for (let index = 0; index < range; index++) {\n      const pile = new Pile();\n      for (let i = 0; i <= index; i++) {\n        pile.addCard(game.drawCard())\n        pile.blockLastCard();\n      }\n      pile.revealLastCard();\n      game.addStackPile(pile);\n    }\n  }\n\n  initializeGame() {\n    const game = new Game();\n    game.addShuffledPile(this.initializePile());\n    this.initializeReservedPiles(game, 4);\n    this.initializeStackPiles(game, 7);\n    game.setShowCardPile(new Pile());\n    return game;\n  }\n\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"id\", event.target.id);\n  }\n\n\n  dropInReservedPile(destination, event) {\n    event.preventDefault();\n    const src = event.dataTransfer.getData(\"id\");\n    this.setState(state => {\n      const { game } = state;\n      game.addCardToReservedPile(destination, src)\n      return { game }\n    })\n  }\n\n  dropInStackPile(destination, event) {\n    event.preventDefault();\n    const src = event.dataTransfer.getData(\"id\");\n    this.setState(state => {\n      const { game } = state;\n      game.addCardToStackPile(destination, src)\n      return { game }\n    })\n  }\n\n  changeCard() {\n    this.setState(state => {\n      const { game } = state;\n      game.changeCard();\n      return { game };\n    })\n  }\n\n  placeCard(src, noOfCards) {\n    this.setState(state => {\n      const { game } = state;\n      game.moveToPossiblePile(src, noOfCards);\n      return { game };\n    })\n  }\n  showTopMostCard() {\n    let card = this.state.game.getTopMostCard();\n    if (!card) card = emptyCard;\n    return <div id=\"showCard\" onDoubleClick={this.placeCard.bind(this, \"showCard\")} className=\"card\" style={this.getColor(card)} draggable={this.state.game.showCardPile.isDraggable()} onDragStart={this.drag}>{card.getUnicode()}</div>;\n  }\n\n  showAllReservedPiles() {\n    const piles = this.state.game.reservedPiles;\n    return piles.map((pile, index) => {\n      let card = pile.getLastCard();\n      if (!card) card = emptyCard;\n      return <div className=\"card\" style={this.getColor(card)} id={\"reserved_\" + index} onDrop={this.dropInReservedPile.bind(this, index)} onDragOver={this.allowDrop} draggable={pile.isDraggable()} onDragStart={this.drag}>{card.getUnicode()}</div>\n    })\n  }\n\n  getColor(card) {\n    return { color: card.color }\n  }\n\n  showAllStackCards(pile, index) {\n    const totalCards = pile.cards.length;\n    if (totalCards === 0) return <div className=\"stackCard\">{emptyCard.getUnicode()}</div>;\n    return pile.cards.map((card, i) => {\n      const dblClickHandler = this.placeCard.bind(this, index, (totalCards - i));\n      if (i + 1 === totalCards) {\n        card.revealCard();\n      }\n      if (card.isBlocked()) return <div className=\"stackCard\" style={this.getColor(card)} draggable=\"false\">{card.getUnicode()}</div>\n      return <div id={\"stackPile_\" + index + \"_\" + (totalCards - i)} onDoubleClick={dblClickHandler} className=\"stackCard\" style={this.getColor(card)} draggable={pile.isDraggable()} onDragStart={this.drag} > {card.getUnicode()}</div>\n    })\n  }\n\n  showAllStackPiles() {\n    const piles = this.state.game.stackPiles;\n    return piles.map((pile, index) => {\n      return <div id={index} onDrop={this.dropInStackPile.bind(this, index)} onDragOver={this.allowDrop} className=\"stack\">{this.showAllStackCards(pile, index)}</div>\n    })\n  }\n  render() {\n    return <div>\n      <div className=\"main\">\n        <div className=\"deck\">\n          <div className=\"card\" onClick={this.changeCard.bind(this)}>{defaultCard.getUnicode()}</div>\n          {this.showTopMostCard()}\n        </div>\n        <div className=\"deck\">\n          {this.showAllReservedPiles()}\n        </div>\n      </div>\n      <div className=\"stackPile\">\n        {this.showAllStackPiles()}\n      </div>\n    </div>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}